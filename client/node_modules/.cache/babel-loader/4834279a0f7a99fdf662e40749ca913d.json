{"ast":null,"code":"var _jsxFileName = \"/Users/vladivals/Documents/ViralBear with MRSS 3/client/src/pages/SellVideoPage.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SignatureCanvas from \"react-signature-canvas\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, CardActions, CardContent, Grid, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport classNames from \"classnames\";\nimport publicIP from \"react-native-public-ip\";\nimport { connect } from \"react-redux\";\nimport { withSnackbar } from \"notistack\";\nimport { useTranslation } from \"react-i18next\";\nimport { submitVideo, setVideoCost } from \"../redux/actions/submittingVideo\";\nimport { validateEmail, validateLink } from \"../utils/validations\";\nimport { useStyles } from \"./SellVideoPage.Styles\";\nimport CircularProgressWithLabel from \"../components/progress/Progress\";\n\nconst SellVideoPage = props => {\n  const {\n    status,\n    message,\n    enqueueSnackbar,\n    cost,\n    setCost\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const messageTranslate = t(message);\n  const signaturePad = React.useRef();\n  const recaptchaRef = React.useRef();\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [link, setLink] = React.useState(\"\");\n  const [signature, setSignature] = React.useState(\"\");\n  const [age, setAge] = React.useState(false);\n  const [accept, setAccept] = React.useState(false);\n  const [agreeRecord, setAgreeRecord] = React.useState(true);\n  const [operator, setOperator] = React.useState(\"\");\n  useEffect(() => {\n    if (messageTranslate != null && status != null) enqueueSnackbar(messageTranslate, {\n      variant: status\n    });\n  }, [status, messageTranslate, enqueueSnackbar]);\n\n  const onSubmit = () => publicIP().then(ip => {\n    if (name !== \"\" && lastName !== \"\" && signature !== \"\" && validateEmail(email) && !(!link || !validateLink(link)) && (!agreeRecord && operator !== \"\" || agreeRecord) && age && accept && cost && parseInt(cost) > 0) {\n      props.postVideo({\n        mainInfo: {\n          last_name: lastName,\n          video_link: link,\n          video_owner: agreeRecord ? \"Yes\" : operator,\n          name,\n          ip,\n          email,\n          date: new Date().toISOString(),\n          cost,\n          signature\n        }\n      });\n      signaturePad.current && signaturePad.current.clear();\n      setName(\"\");\n      setLastName(\"\");\n      setEmail(\"\");\n      setLink(\"\");\n      setOperator(\"\");\n      setSignature(\"\");\n      setAge(false);\n      setAccept(false);\n      setAgreeRecord(true);\n      setCost(0);\n    } else {\n      props.enqueueSnackbar(t(\"dataEnteredIncorrectly\"), {\n        variant: \"error\"\n      });\n    }\n  });\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.paddingTopBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, props.loading && props.percent !== 100 ? /*#__PURE__*/React.createElement(Grid, {\n    className: classes.sizeGridProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressWithLabel, {\n    value: props.percent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 10,\n    lg: 6,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    className: classNames(classes.justifyContentCenter, classes.flex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, t(\"submitVideo\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t(\"name\"),\n    variant: \"outlined\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t(\"lastName\"),\n    variant: \"outlined\",\n    value: lastName,\n    onChange: event => setLastName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    type: \"email\",\n    label: t(\"email\"),\n    variant: \"outlined\",\n    value: email,\n    error: !validateEmail(email),\n    onChange: event => setEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t(\"your\") + \" \" + t(\"linkUrl\"),\n    variant: \"outlined\",\n    error: !validateLink(link),\n    value: link,\n    onChange: event => setLink(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.marginAuto,\n    control: /*#__PURE__*/React.createElement(Grid, {\n      component: \"label\",\n      container: true,\n      alignItems: \"center\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, t(\"no\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      onChange: event => setAgreeRecord(event.target.checked),\n      checked: agreeRecord,\n      name: \"switchRecord\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, t(\"yes\"))),\n    label: t(\"youRecordVideo\"),\n    labelPlacement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  })), !agreeRecord ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t(\"whoRecordVideo\"),\n    variant: \"outlined\",\n    value: operator,\n    onChange: event => setOperator(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  })) : null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.centeredVertical,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      required: true,\n      checked: age,\n      onChange: event => setAge(event.target.checked),\n      name: \"checkedAge\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }),\n    label: t(\"iConfirm\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classNames(classes.centeredContent, classes.flex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.centeredVertical,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      required: true,\n      checked: accept,\n      onChange: event => setAccept(event.target.checked),\n      name: \"checkedAccept\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, t(\"iAccept\"), /*#__PURE__*/React.createElement(Link, {\n      className: classes.link,\n      to: \"/termsOfUsePayment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 23\n      }\n    }, t(\"submissionTerms\"), \" \"), \"and\", /*#__PURE__*/React.createElement(Link, {\n      className: classes.link,\n      to: \"/privatePolicy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 23\n      }\n    }, t(\"privacyPolicy\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.costBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    label: t(\"cost\"),\n    variant: \"outlined\",\n    type: \"number\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 23\n        }\n      }, \"$\")\n    },\n    value: cost,\n    onChange: event => setCost(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, t(\"yourSignature\")), /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SignatureCanvas, {\n    canvasProps: {\n      width: 500,\n      height: 200\n    },\n    ref: signaturePad,\n    onEnd: () => setSignature(signaturePad.current.toData()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"outlined\",\n    onClick: () => signaturePad.current.clear(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }, t(\"clear\"))))), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    ref: recaptchaRef,\n    size: \"invisible\",\n    sitekey: \"6Lc7T1ghAAAAADnYLGHgR83nJOqx7ePafScz1pQO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 26\n      }\n    }, \"send\"),\n    onClick: () => onSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, t(\"send\") + \" \" + t(\"video\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  })));\n};\n\nSellVideoPage.propTypes = {\n  loading: PropTypes.bool,\n  percent: PropTypes.number,\n  message: PropTypes.string,\n  status: PropTypes.string,\n  cost: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  loading: state.videoSubmitting.loading,\n  percent: state.videoSubmitting.percent,\n  error: state.videoSubmitting.error,\n  message: state.notificationsSetting.message,\n  status: state.notificationsSetting.status,\n  cost: state.videoSubmitting.cost\n});\n\nconst mapDispatchToProps = {\n  postVideo: submitVideo,\n  setCost: setVideoCost\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(SellVideoPage));","map":{"version":3,"sources":["/Users/vladivals/Documents/ViralBear with MRSS 3/client/src/pages/SellVideoPage.js"],"names":["React","useEffect","PropTypes","SignatureCanvas","Link","Button","Card","CardActions","CardContent","Grid","InputAdornment","TextField","Typography","Checkbox","FormControlLabel","Switch","Icon","ReCAPTCHA","classNames","publicIP","connect","withSnackbar","useTranslation","submitVideo","setVideoCost","validateEmail","validateLink","useStyles","CircularProgressWithLabel","SellVideoPage","props","status","message","enqueueSnackbar","cost","setCost","t","messageTranslate","signaturePad","useRef","recaptchaRef","classes","name","setName","useState","lastName","setLastName","email","setEmail","link","setLink","signature","setSignature","age","setAge","accept","setAccept","agreeRecord","setAgreeRecord","operator","setOperator","variant","onSubmit","then","ip","parseInt","postVideo","mainInfo","last_name","video_link","video_owner","date","Date","toISOString","current","clear","paddingTopBottom","loading","percent","sizeGridProgress","justifyContentCenter","flex","event","target","value","marginAuto","checked","centeredVertical","centeredContent","costBlock","startAdornment","width","height","toData","propTypes","bool","number","string","mapStateToProps","state","videoSubmitting","error","notificationsSetting","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SignatureCanvas from \"react-signature-canvas\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  InputAdornment,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport classNames from \"classnames\";\nimport publicIP from \"react-native-public-ip\";\nimport { connect } from \"react-redux\";\nimport { withSnackbar } from \"notistack\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { submitVideo, setVideoCost } from \"../redux/actions/submittingVideo\";\nimport { validateEmail, validateLink } from \"../utils/validations\";\nimport { useStyles } from \"./SellVideoPage.Styles\";\nimport CircularProgressWithLabel from \"../components/progress/Progress\";\n\nconst SellVideoPage = (props) => {\n  const { status, message, enqueueSnackbar, cost, setCost } = props;\n\n  const { t } = useTranslation();\n\n  const messageTranslate = t(message);\n\n  const signaturePad = React.useRef();\n  const recaptchaRef = React.useRef();\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [link, setLink] = React.useState(\"\");\n  const [signature, setSignature] = React.useState(\"\");\n  const [age, setAge] = React.useState(false);\n  const [accept, setAccept] = React.useState(false);\n  const [agreeRecord, setAgreeRecord] = React.useState(true);\n  const [operator, setOperator] = React.useState(\"\");\n\n  useEffect(() => {\n    if (messageTranslate != null && status != null)\n      enqueueSnackbar(messageTranslate, {\n        variant: status,\n      });\n  }, [status, messageTranslate, enqueueSnackbar]);\n\n  const onSubmit = () =>\n    publicIP().then((ip) => {\n      if (\n        name !== \"\" &&\n        lastName !== \"\" &&\n        signature !== \"\" &&\n        validateEmail(email) &&\n        !(!link || !validateLink(link)) &&\n        ((!agreeRecord && operator !== \"\") || agreeRecord) &&\n        age &&\n        accept &&\n        cost &&\n        parseInt(cost) > 0\n      ) {\n        props.postVideo({\n          mainInfo: {\n            last_name: lastName,\n            video_link: link,\n            video_owner: agreeRecord ? \"Yes\" : operator,\n            name,\n            ip,\n            email,\n            date: new Date().toISOString(),\n            cost,\n            signature,\n          },\n        });\n\n        signaturePad.current && signaturePad.current.clear();\n        setName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setLink(\"\");\n        setOperator(\"\");\n        setSignature(\"\");\n        setAge(false);\n        setAccept(false);\n        setAgreeRecord(true);\n        setCost(0);\n      } else {\n        props.enqueueSnackbar(t(\"dataEnteredIncorrectly\"), {\n          variant: \"error\",\n        });\n      }\n    });\n\n  return (\n    <Grid container className={classes.paddingTopBottom}>\n      {props.loading && props.percent !== 100 ? (\n        <Grid className={classes.sizeGridProgress}>\n          <CircularProgressWithLabel value={props.percent} />\n        </Grid>\n      ) : (\n        <>\n          <Grid item xs={1} lg={3} />\n          <Grid container item xs={10} lg={6} spacing={3}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h2\"\n                className={classNames(\n                  classes.justifyContentCenter,\n                  classes.flex\n                )}\n              >\n                {t(\"submitVideo\")}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} lg={6}>\n              <TextField\n                required\n                fullWidth\n                label={t(\"name\")}\n                variant=\"outlined\"\n                value={name}\n                onChange={(event) => setName(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                required\n                fullWidth\n                label={t(\"lastName\")}\n                variant=\"outlined\"\n                value={lastName}\n                onChange={(event) => setLastName(event.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                type=\"email\"\n                label={t(\"email\")}\n                variant=\"outlined\"\n                value={email}\n                error={!validateEmail(email)}\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                label={t(\"your\") + \" \" + t(\"linkUrl\")}\n                variant=\"outlined\"\n                error={!validateLink(link)}\n                value={link}\n                onChange={(event) => setLink(event.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                className={classes.marginAuto}\n                control={\n                  <Grid\n                    component=\"label\"\n                    container\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>{t(\"no\")}</Grid>\n                    <Grid item>\n                      <Switch\n                        onChange={(event) =>\n                          setAgreeRecord(event.target.checked)\n                        }\n                        checked={agreeRecord}\n                        name=\"switchRecord\"\n                        color=\"primary\"\n                      />\n                    </Grid>\n                    <Grid item>{t(\"yes\")}</Grid>\n                  </Grid>\n                }\n                label={t(\"youRecordVideo\")}\n                labelPlacement=\"top\"\n              />\n            </Grid>\n\n            {!agreeRecord ? (\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  label={t(\"whoRecordVideo\")}\n                  variant=\"outlined\"\n                  value={operator}\n                  onChange={(event) => setOperator(event.target.value)}\n                />\n              </Grid>\n            ) : null}\n            <Grid container xs={10}>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  className={classes.centeredVertical}\n                  control={\n                    <Checkbox\n                      required\n                      checked={age}\n                      onChange={(event) => setAge(event.target.checked)}\n                      name=\"checkedAge\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={t(\"iConfirm\")}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                className={classNames(classes.centeredContent, classes.flex)}\n              >\n                <FormControlLabel\n                  className={classes.centeredVertical}\n                  control={\n                    <Checkbox\n                      required\n                      checked={accept}\n                      onChange={(event) => setAccept(event.target.checked)}\n                      name=\"checkedAccept\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"body1\">\n                      {t(\"iAccept\")}\n                      <Link className={classes.link} to=\"/termsOfUsePayment\">\n                        {t(\"submissionTerms\")}{\" \"}\n                      </Link>\n                      and\n                      <Link className={classes.link} to=\"/privatePolicy\">\n                        {t(\"privacyPolicy\")}\n                      </Link>\n                    </Typography>\n                  }\n                />\n              </Grid>\n\n              <Grid item xs={12} className={classes.costBlock}>\n                <TextField\n                  required\n                  label={t(\"cost\")}\n                  variant=\"outlined\"\n                  type=\"number\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    ),\n                  }}\n                  value={cost}\n                  onChange={(event) => setCost(event.target.value)}\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography gutterBottom variant=\"body1\">\n                {t(\"yourSignature\")}\n              </Typography>\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <SignatureCanvas\n                    canvasProps={{ width: 500, height: 200 }}\n                    ref={signaturePad}\n                    onEnd={() => setSignature(signaturePad.current.toData())}\n                  />\n                </CardContent>\n                <CardActions>\n                  <Button\n                    fullWidth\n                    variant=\"outlined\"\n                    onClick={() => signaturePad.current.clear()}\n                  >\n                    {t(\"clear\")}\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n\n            <ReCAPTCHA\n              ref={recaptchaRef}\n              size=\"invisible\"\n              sitekey=\"6Lc7T1ghAAAAADnYLGHgR83nJOqx7ePafScz1pQO\"\n            />\n\n            <Grid item xs={12}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={<Icon>send</Icon>}\n                onClick={() => onSubmit()}\n              >\n                {t(\"send\") + \" \" + t(\"video\")}\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid item xs={1} lg={3} />\n        </>\n      )}\n    </Grid>\n  );\n};\n\nSellVideoPage.propTypes = {\n  loading: PropTypes.bool,\n  percent: PropTypes.number,\n  message: PropTypes.string,\n  status: PropTypes.string,\n  cost: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.videoSubmitting.loading,\n  percent: state.videoSubmitting.percent,\n  error: state.videoSubmitting.error,\n  message: state.notificationsSetting.message,\n  status: state.notificationsSetting.status,\n  cost: state.videoSubmitting.cost,\n});\n\nconst mapDispatchToProps = {\n  postVideo: submitVideo,\n  setCost: setVideoCost,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withSnackbar(SellVideoPage));\n"]},"metadata":{},"sourceType":"module"}