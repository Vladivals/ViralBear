{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport ReduxPromise from \"redux-promise\";\nimport thunk from \"redux-thunk\";\nimport history from \"../utils/history\";\nimport { reducers } from \"./reducers\";\nconst composeEnhancers = window.REDUX_DEVTOOLS_EXTENSION_COMPOSE || compose;\nconst store = createStore(reducers, {\n  videoSubmitting: {\n    loading: false,\n    percent: 0,\n    error: null,\n    cost: \"0\"\n  },\n  contactsSending: {\n    error: null\n  },\n  notificationsSetting: {\n    message: null,\n    status: null\n  }\n}, composeEnhancers(applyMiddleware(ReduxPromise, thunk)));\nconst synthHistory = syncHistoryWithStore(history, store);\nexport { store, synthHistory };","map":{"version":3,"sources":["/Users/vladivals/Documents/ViralBear MRSS 5/client/src/redux/index.js"],"names":["applyMiddleware","compose","createStore","syncHistoryWithStore","ReduxPromise","thunk","history","reducers","composeEnhancers","window","REDUX_DEVTOOLS_EXTENSION_COMPOSE","store","videoSubmitting","loading","percent","error","cost","contactsSending","notificationsSetting","message","status","synthHistory"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,gCAAP,IAA2CT,OAApE;AAEA,MAAMU,KAAK,GAAGT,WAAW,CACvBK,QADuB,EAEvB;AACEK,EAAAA,eAAe,EAAE;AACfC,IAAAA,OAAO,EAAE,KADM;AAEfC,IAAAA,OAAO,EAAE,CAFM;AAGfC,IAAAA,KAAK,EAAE,IAHQ;AAIfC,IAAAA,IAAI,EAAE;AAJS,GADnB;AAOEC,EAAAA,eAAe,EAAE;AACfF,IAAAA,KAAK,EAAE;AADQ,GAPnB;AAUEG,EAAAA,oBAAoB,EAAE;AACpBC,IAAAA,OAAO,EAAE,IADW;AAEpBC,IAAAA,MAAM,EAAE;AAFY;AAVxB,CAFuB,EAiBvBZ,gBAAgB,CAACR,eAAe,CAACI,YAAD,EAAeC,KAAf,CAAhB,CAjBO,CAAzB;AAoBA,MAAMgB,YAAY,GAAGlB,oBAAoB,CAACG,OAAD,EAAUK,KAAV,CAAzC;AACA,SAASA,KAAT,EAAgBU,YAAhB","sourcesContent":["import { applyMiddleware, compose, createStore } from \"redux\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport ReduxPromise from \"redux-promise\";\nimport thunk from \"redux-thunk\";\n\nimport history from \"../utils/history\";\nimport { reducers } from \"./reducers\";\n\nconst composeEnhancers = window.REDUX_DEVTOOLS_EXTENSION_COMPOSE || compose;\n\nconst store = createStore(\n  reducers,\n  {\n    videoSubmitting: {\n      loading: false,\n      percent: 0,\n      error: null,\n      cost: \"0\",\n    },\n    contactsSending: {\n      error: null,\n    },\n    notificationsSetting: {\n      message: null,\n      status: null,\n    },\n  },\n  composeEnhancers(applyMiddleware(ReduxPromise, thunk))\n);\n\nconst synthHistory = syncHistoryWithStore(history, store);\nexport { store, synthHistory };\n"]},"metadata":{},"sourceType":"module"}