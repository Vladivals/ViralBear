{"ast":null,"code":"var _jsxFileName = \"/Users/vladivals/Documents/ViralBear MRSS 4/client/src/pages/SubmitVideoPage.js\";\nimport React, { useEffect } from \"react\";\nimport SignatureCanvas from \"react-signature-canvas\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, CardActions, CardContent, Grid, TextField, Typography } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport classNames from \"classnames\";\nimport publicIP from \"react-native-public-ip\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { useTranslation } from \"react-i18next\";\nimport { submitVideo } from \"../redux/actions/submittingVideo\";\nimport { validateEmail, validateLink } from \"../utils/validations\";\nimport { useStyles } from \"./SubmitVideoPage.Styles\";\nimport CircularProgressWithLabel from \"../components/progress/Progress\";\n\nconst SubmitVideoPage = props => {\n  const {\n    status,\n    message,\n    enqueueSnackbar\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const messageTranslate = t(message);\n  const signaturePad = React.useRef();\n  const recaptchaRef = React.useRef();\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [link, setLink] = React.useState(\"\");\n  const [signature, setSignature] = React.useState(\"\");\n  const [age, setAge] = React.useState(false);\n  const [accept, setAccept] = React.useState(false);\n  const [agreeRecord, setAgreeRecord] = React.useState(true);\n  const [operator, setOperator] = React.useState(\"\");\n  useEffect(() => {\n    if (messageTranslate != null && status != null) enqueueSnackbar(messageTranslate, {\n      variant: status\n    });\n  }, [status, messageTranslate, enqueueSnackbar]);\n\n  const onSubmit = () => publicIP().then(ip => {\n    if (name !== \"\" && lastName !== \"\" && signature !== \"\" && validateEmail(email) && !(!link || !validateLink(link)) && (!agreeRecord && operator !== \"\" || agreeRecord) && age && accept) {\n      props.postVideo({\n        mainInfo: {\n          last_name: lastName,\n          video_link: link,\n          video_owner: agreeRecord ? \"Yes\" : operator,\n          name,\n          ip,\n          email,\n          date: new Date().toISOString(),\n          cost: \"0\",\n          signature\n        }\n      });\n      signaturePad.current && signaturePad.current.clear();\n      setName(\"\");\n      setLastName(\"\");\n      setEmail(\"\");\n      setLink(\"\");\n      setOperator(\"\");\n      setSignature(\"\");\n      setAge(false);\n      setAccept(false);\n      setAgreeRecord(true);\n    } else {\n      props.enqueueSnackbar(t(\"dataEnteredIncorrectly\"), {\n        variant: \"error\"\n      });\n    }\n  });\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.paddingTopBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, props.loading && props.percent !== 100 ? /*#__PURE__*/React.createElement(Grid, {\n    className: classes.sizeGridProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressWithLabel, {\n    value: props.percent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 10,\n    lg: 6,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    className: classNames(classes.justifyContentCenter, classes.flex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, t(\"submitVideo\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t(\"name\"),\n    variant: \"outlined\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t(\"lastName\"),\n    variant: \"outlined\",\n    value: lastName,\n    onChange: event => setLastName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    type: \"email\",\n    label: t(\"email\"),\n    variant: \"outlined\",\n    value: email,\n    error: !validateEmail(email),\n    onChange: event => setEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t(\"your\") + \" \" + t(\"linkUrl\"),\n    variant: \"outlined\",\n    error: !validateLink(link),\n    value: link,\n    onChange: event => setLink(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.marginAuto,\n    control: /*#__PURE__*/React.createElement(Grid, {\n      component: \"label\",\n      container: true,\n      alignItems: \"center\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, t(\"no\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      onChange: event => setAgreeRecord(event.target.checked),\n      checked: agreeRecord,\n      name: \"switchRecord\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, t(\"yes\"))),\n    label: t(\"youRecordVideo\"),\n    labelPlacement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  })), !agreeRecord ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t(\"whoRecordVideo\"),\n    variant: \"outlined\",\n    value: operator,\n    onChange: event => setOperator(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  })) : null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.centeredVertical,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      required: true,\n      checked: age,\n      onChange: event => setAge(event.target.checked),\n      name: \"checkedAge\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }),\n    label: t(\"iConfirm\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classNames(classes.centeredContent, classes.flex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.centeredVertical,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      required: true,\n      checked: accept,\n      onChange: event => setAccept(event.target.checked),\n      name: \"checkedAccept\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, t(\"iAccept\"), /*#__PURE__*/React.createElement(Link, {\n      className: classes.link,\n      to: \"/termsOfUse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 23\n      }\n    }, t(\"submissionTerms\"), \" \"), \"and\", /*#__PURE__*/React.createElement(Link, {\n      className: classes.link,\n      to: \"/privatePolicy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 23\n      }\n    }, t(\"privacyPolicy\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, t(\"yourSignature\")), /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SignatureCanvas, {\n    canvasProps: {\n      width: 500,\n      height: 200\n    },\n    ref: signaturePad,\n    onEnd: () => setSignature(signaturePad.current.toData()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"outlined\",\n    onClick: () => signaturePad.current.clear(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, t(\"clear\"))))), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    ref: recaptchaRef,\n    size: \"invisible\",\n    sitekey: \"6Lc7T1ghAAAAADnYLGHgR83nJOqx7ePafScz1pQO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 26\n      }\n    }, \"send\"),\n    onClick: () => onSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, t(\"send\") + \" \" + t(\"video\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  })));\n};\n\nSubmitVideoPage.propTypes = {\n  loading: PropTypes.bool,\n  percent: PropTypes.number,\n  message: PropTypes.string,\n  status: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  loading: state.videoSubmitting.loading,\n  percent: state.videoSubmitting.percent,\n  error: state.videoSubmitting.error,\n  message: state.notificationsSetting.message,\n  status: state.notificationsSetting.status\n});\n\nconst mapDispatchToProps = {\n  postVideo: submitVideo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(SubmitVideoPage));","map":{"version":3,"sources":["/Users/vladivals/Documents/ViralBear MRSS 4/client/src/pages/SubmitVideoPage.js"],"names":["React","useEffect","SignatureCanvas","Link","Button","Card","CardActions","CardContent","Grid","TextField","Typography","Checkbox","FormControlLabel","Switch","Icon","ReCAPTCHA","classNames","publicIP","connect","PropTypes","withSnackbar","useTranslation","submitVideo","validateEmail","validateLink","useStyles","CircularProgressWithLabel","SubmitVideoPage","props","status","message","enqueueSnackbar","t","messageTranslate","signaturePad","useRef","recaptchaRef","classes","name","setName","useState","lastName","setLastName","email","setEmail","link","setLink","signature","setSignature","age","setAge","accept","setAccept","agreeRecord","setAgreeRecord","operator","setOperator","variant","onSubmit","then","ip","postVideo","mainInfo","last_name","video_link","video_owner","date","Date","toISOString","cost","current","clear","paddingTopBottom","loading","percent","sizeGridProgress","justifyContentCenter","flex","event","target","value","marginAuto","checked","centeredVertical","centeredContent","width","height","toData","propTypes","bool","number","string","mapStateToProps","state","videoSubmitting","error","notificationsSetting","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport SignatureCanvas from \"react-signature-canvas\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport classNames from \"classnames\";\nimport publicIP from \"react-native-public-ip\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withSnackbar } from \"notistack\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { submitVideo } from \"../redux/actions/submittingVideo\";\nimport { validateEmail, validateLink } from \"../utils/validations\";\nimport { useStyles } from \"./SubmitVideoPage.Styles\";\nimport CircularProgressWithLabel from \"../components/progress/Progress\";\n\nconst SubmitVideoPage = (props) => {\n  const { status, message, enqueueSnackbar } = props;\n  const { t } = useTranslation();\n\n  const messageTranslate = t(message);\n\n  const signaturePad = React.useRef();\n  const recaptchaRef = React.useRef();\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [link, setLink] = React.useState(\"\");\n  const [signature, setSignature] = React.useState(\"\");\n  const [age, setAge] = React.useState(false);\n  const [accept, setAccept] = React.useState(false);\n  const [agreeRecord, setAgreeRecord] = React.useState(true);\n  const [operator, setOperator] = React.useState(\"\");\n\n  useEffect(() => {\n    if (messageTranslate != null && status != null)\n      enqueueSnackbar(messageTranslate, {\n        variant: status,\n      });\n  }, [status, messageTranslate, enqueueSnackbar]);\n\n  const onSubmit = () =>\n    publicIP().then((ip) => {\n      if (\n        name !== \"\" &&\n        lastName !== \"\" &&\n        signature !== \"\" &&\n        validateEmail(email) &&\n        !(!link || !validateLink(link)) &&\n        ((!agreeRecord && operator !== \"\") || agreeRecord) &&\n        age &&\n        accept\n      ) {\n        props.postVideo({\n          mainInfo: {\n            last_name: lastName,\n            video_link: link,\n            video_owner: agreeRecord ? \"Yes\" : operator,\n            name,\n            ip,\n            email,\n            date: new Date().toISOString(),\n            cost: \"0\",\n            signature,\n          },\n        });\n\n        signaturePad.current && signaturePad.current.clear();\n        setName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setLink(\"\");\n        setOperator(\"\");\n        setSignature(\"\");\n        setAge(false);\n        setAccept(false);\n        setAgreeRecord(true);\n      } else {\n        props.enqueueSnackbar(t(\"dataEnteredIncorrectly\"), {\n          variant: \"error\",\n        });\n      }\n    });\n\n  return (\n    <Grid container className={classes.paddingTopBottom}>\n      {props.loading && props.percent !== 100 ? (\n        <Grid className={classes.sizeGridProgress}>\n          <CircularProgressWithLabel value={props.percent} />\n        </Grid>\n      ) : (\n        <>\n          <Grid item xs={1} lg={3} />\n          <Grid container item xs={10} lg={6} spacing={3}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h2\"\n                className={classNames(\n                  classes.justifyContentCenter,\n                  classes.flex\n                )}\n              >\n                {t(\"submitVideo\")}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} lg={6}>\n              <TextField\n                required\n                fullWidth\n                label={t(\"name\")}\n                variant=\"outlined\"\n                value={name}\n                onChange={(event) => setName(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                required\n                fullWidth\n                label={t(\"lastName\")}\n                variant=\"outlined\"\n                value={lastName}\n                onChange={(event) => setLastName(event.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                type=\"email\"\n                label={t(\"email\")}\n                variant=\"outlined\"\n                value={email}\n                error={!validateEmail(email)}\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                label={t(\"your\") + \" \" + t(\"linkUrl\")}\n                variant=\"outlined\"\n                error={!validateLink(link)}\n                value={link}\n                onChange={(event) => setLink(event.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                className={classes.marginAuto}\n                control={\n                  <Grid\n                    component=\"label\"\n                    container\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>{t(\"no\")}</Grid>\n                    <Grid item>\n                      <Switch\n                        onChange={(event) =>\n                          setAgreeRecord(event.target.checked)\n                        }\n                        checked={agreeRecord}\n                        name=\"switchRecord\"\n                        color=\"primary\"\n                      />\n                    </Grid>\n                    <Grid item>{t(\"yes\")}</Grid>\n                  </Grid>\n                }\n                label={t(\"youRecordVideo\")}\n                labelPlacement=\"top\"\n              />\n            </Grid>\n\n            {!agreeRecord ? (\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  label={t(\"whoRecordVideo\")}\n                  variant=\"outlined\"\n                  value={operator}\n                  onChange={(event) => setOperator(event.target.value)}\n                />\n              </Grid>\n            ) : null}\n            <Grid container xs={10}>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  className={classes.centeredVertical}\n                  control={\n                    <Checkbox\n                      required\n                      checked={age}\n                      onChange={(event) => setAge(event.target.checked)}\n                      name=\"checkedAge\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={t(\"iConfirm\")}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                className={classNames(classes.centeredContent, classes.flex)}\n              >\n                <FormControlLabel\n                  className={classes.centeredVertical}\n                  control={\n                    <Checkbox\n                      required\n                      checked={accept}\n                      onChange={(event) => setAccept(event.target.checked)}\n                      name=\"checkedAccept\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"body1\">\n                      {t(\"iAccept\")}\n                      <Link className={classes.link} to=\"/termsOfUse\">\n                        {t(\"submissionTerms\")}{\" \"}\n                      </Link>\n                      and\n                      <Link className={classes.link} to=\"/privatePolicy\">\n                        {t(\"privacyPolicy\")}\n                      </Link>\n                    </Typography>\n                  }\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography gutterBottom variant=\"body1\">\n                {t(\"yourSignature\")}\n              </Typography>\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <SignatureCanvas\n                    canvasProps={{ width: 500, height: 200 }}\n                    ref={signaturePad}\n                    onEnd={() => setSignature(signaturePad.current.toData())}\n                  />\n                </CardContent>\n                <CardActions>\n                  <Button\n                    fullWidth\n                    variant=\"outlined\"\n                    onClick={() => signaturePad.current.clear()}\n                  >\n                    {t(\"clear\")}\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n\n            <ReCAPTCHA\n              ref={recaptchaRef}\n              size=\"invisible\"\n              sitekey=\"6Lc7T1ghAAAAADnYLGHgR83nJOqx7ePafScz1pQO\"\n            />\n\n            <Grid item xs={12}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={<Icon>send</Icon>}\n                onClick={() => onSubmit()}\n              >\n                {t(\"send\") + \" \" + t(\"video\")}\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid item xs={1} lg={3} />\n        </>\n      )}\n    </Grid>\n  );\n};\n\nSubmitVideoPage.propTypes = {\n  loading: PropTypes.bool,\n  percent: PropTypes.number,\n  message: PropTypes.string,\n  status: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.videoSubmitting.loading,\n  percent: state.videoSubmitting.percent,\n  error: state.videoSubmitting.error,\n  message: state.notificationsSetting.message,\n  status: state.notificationsSetting.status,\n});\n\nconst mapDispatchToProps = {\n  postVideo: submitVideo,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withSnackbar(SubmitVideoPage));\n"]},"metadata":{},"sourceType":"module"}